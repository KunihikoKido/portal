# Generated by Django 4.1.4 on 2022-12-13 10:34

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classifications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True, verbose_name='url')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image_url', models.URLField(blank=True, verbose_name='image url')),
                ('pub_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='publication date')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('product_id', models.CharField(blank=True, max_length=100, verbose_name='product id')),
                ('brand_name', models.CharField(blank=True, max_length=100, verbose_name='brand name')),
                ('offer_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='offer count')),
                ('low_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='low price')),
                ('high_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='high price')),
                ('price_currency', models.CharField(blank=True, default='JPY', max_length=100, verbose_name='price currency')),
                ('rating', models.FloatField(default=0.0, verbose_name='review rating')),
                ('review_count', models.PositiveIntegerField(default=0, verbose_name='review count')),
                ('category_classifications', models.ManyToManyField(blank=True, limit_choices_to={'classification_type': 'category'}, related_name='CategoryProductDocument', to='classifications.categoryclassification', verbose_name='category classifications')),
                ('city_classifications', models.ManyToManyField(blank=True, limit_choices_to={'classification_type': 'city'}, related_name='CityProductDocument', to='classifications.cityclassification', verbose_name='city classifications')),
                ('country_classifications', models.ManyToManyField(blank=True, limit_choices_to={'classification_type': 'country'}, related_name='CountryProductDocument', to='classifications.countryclassification', verbose_name='country classifications')),
                ('region_classifications', models.ManyToManyField(blank=True, limit_choices_to={'classification_type': 'region'}, related_name='RegionProductDocument', to='classifications.regionclassification', verbose_name='region classifications')),
                ('season_classifications', models.ManyToManyField(blank=True, limit_choices_to={'classification_type': 'season'}, related_name='SeasonProductDocument', to='classifications.seasonclassification', verbose_name='season classifications')),
            ],
            options={
                'verbose_name': 'Product document',
                'verbose_name_plural': 'Product documents',
                'index_name': 'portal.documents.product',
                'mapping_template': 'mappings/portal.documents.product.json',
            },
        ),
    ]
