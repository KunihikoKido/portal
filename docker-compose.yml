version: '3'

services:
  web:
    build: .
    command: python3 manage.py runserver 0.0.0.0:${WEB_PORT}
    environment:
      - ES_HOST=${ES_HOST}
      - ES_PORT=${ES_PORT}
      - STATIC_URL=${STATIC_URL}
    volumes:
      - .:/code
    ports:
      - ${WEB_PORT}:8000
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    build:
      context: .
      dockerfile: ./compose/elasticsearch/Dockerfile
      args:
        - STACK_VERSION=${STACK_VERSION}
    environment:
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=${LICENSE}
    ports:
      - ${ES_PORT}:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:9200 | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    environment:
      ELASTICSEARCH_HOSTS: http://${ES_HOST}:${ES_PORT}
    ports:
       - ${KIBANA_PORT}:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
